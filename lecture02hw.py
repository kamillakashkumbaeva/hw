# Запрашиваем ввод пользователя
number = input("Введите число от 0 до 99: ")
#number: тмя переменной, которая будет хранить значение, введённое пользователем// для хранения данных. //
# =: Оператор присваивания. Он присваивает значение правой части (результат input(...)) переменной слева (number).
#input(...): Функция, которая выводит строку в скобках (в данном случае, "Введите число от 0 до 99: ") на экран и ожидает, пока пользователь введёт данные с клавиатуры. Результат — строка.
#("Введите число от 0 до 99: "): Строка, которая показывается пользователю. Это текст запроса.

# Проверяем, является ли введенное значение числом
if not number.isdigit():
#if: оператор условного ветвления. Он проверяет, истинно ли условие в скобках.
#not: емпли условие истинно, то not делает его ложным, и наоборот/// проверяем, что число не является числом.
#number.isdigit(): Метод строки, который проверяет, состоит ли строка из цифр (0-9). Если строка состоит только из цифр, метод возвращает True, в противном случае — False.
#:: Двоеточие указывает на то, что начинается блок кода, который будет выполняться, если условие истинно.
    print("Вы должны ввести число")  # Если нет, сообщаем об ошибке
else:
    # Преобразуем строку в целое число
    number = int(number)
#int(...): функция преобразует аргумент в целое число. 

    # Проверяем, находится ли число в допустимом диапазоне
    if number < 0 or number > 99:
#if number < 0 or number > 99:: Проверяет, находится ли число вне диапазона от 0 до 99.
#or: Лог оператор, который возвр True, если хотя бы одно из условий истинно. Здесь он проверяет два условия:
#number < 0: Проверяет, меньше ли число 0.
#number > 99: Проверяет, больше ли число 99.
#:: Двоеточие указывает на начало блока кода, который будет выполняться, если условие истинно.
        print("Число должно быть от 0 до 99")  # Сообщаем об ошибке, если число вне диапазона
    else:
        # Создаем списки чисел прописью
        ones = ["ноль", "один", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять"]
        teens = ["десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать"]
        tens = ["", "", "двадцать", "тридцать", "сорок", "пятьдесят", "шестьдесят", "семьдесят", "восемьдесят", "девяносто"]
        
        # Определяем, как вывести число прописью
        if 0 <= number <= 9:  # Если число от 0 до 9
            print(ones[number])  # Выводим соответствующее слово из списка ones
        elif 10 <= number <= 19:  # Если число от 10 до 19
            print(teens[number - 10])  # Выводим соответствующее слово из списка teens
        elif 20 <= number <= 99:  # Если число от 20 до 99
            tens_part = tens[number // 10]  # Находим десятки
#tens_part = tens[number // 10]: Находит десятки в числе.
#number // 10: Оператор целочисленного деления (//), который делит число на 10 и отбрасывает дробную часть. Например, для 27 это будет 2.
#tens[...]: Использует результат деления как индекс для доступа к списку tens.
            ones_part = ones[number % 10]  # Находим единицы
#Находит единицы в числе.
#number % 10: Оператор остатка от деления (%),онк возвращает остаток от деления на 10. Например, для 27 это будет 7.
            if ones_part == "ноль":  # Если единицы равны нулю
                print(tens_part)  # Выводим только десятки
            else:  # Если единицы не равны нулю
                print(tens_part + " " + ones_part)  # Выводим десятки и единицы через пробел
#print(tens_part + " " + ones_part): Выводит десятки и единицы, объединяя их с пробелом.
#+: Оператор конкатенации строк. Соединяет строки вместе.
